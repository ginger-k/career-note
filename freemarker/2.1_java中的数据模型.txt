freemarker有自己的数据类型，但是我们依旧可以使用java的数据类型

Template的process(Object dataModel, Writer out)方法中，
会用freemarker.template.ObjectWrapper对java的dataModel进行包装，
包装成 freemarker.template.TemplateScalarModel


1.在tempates文件夹中新建a.ftl文件
  你好，${user}，欢迎访问
  
2.编写代码
	//创建Freemarker配置实例
	Configuration cfg = new Configuration(Configuration.VERSION_2_3_23);
	cfg.setDirectoryForTemplateLoading(new File("templates"));
	cfg.setDefaultEncoding("UTF-8");
	cfg.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);
	
	//创建数据模型
	Map<String, String> root = new HashMap<String, String>();
	root.put("user", "老高");
	
	//加载模板文件
	Template t1 = cfg.getTemplate("a.ftl");
	
	//显示生成的数据,将合并后的数据打印到控制台
	Writer out = new OutputStreamWriter(System.out);

	t1.process(root, out);
	out.flush();