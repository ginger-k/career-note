输入参数类型: 基本类型,pojo,HashMap
	基本类型,通过占位符(#可以是#{1}或#{param1},$只能用${param1})或者用注解指定名称取值
	pojo,通过对象的属性(get方法)来取值
	HashMap,通过其key的值来匹配取值

两种方式操作数据库:
	1.sqlSession直接操作,输入参数是基本类型,pojo或HashMap,仅有一个(Object)
	2.sqlSession获取Mapper,通过Mapper定义的方法去操作,输入参数是基本类型,pojo或HashMap,可以有多个(自定义方法)

# -- 占位符,会自动识别参数类型,不需要配置parameterType
     单参数: 基本类型自动匹配,跟名字无关;pojo以get方式,HashMap根据其key的值来取
     多参数: 基本类型通过占位符${1}或${param1},或者用注解的方式
	     或者将基本类型封装到pojo和HashMap中.
	     1).在sql语句中用0,1或param1,param2占位 
			SELECT * FROM user WHERE name = #{0} and password= #{1}
		     或 SELECT * FROM user WHERE name = #{param1} and password= #{param2}
			public interface UserMapper {
				public User queryUserByNameAndPassword(String name,String password);
			}

	     2).在Mapper方法的参数上加注解来和语句#占位符的名称进行映射
			SELECT * FROM user WHERE name = #{uname} and password= #{upassword}
			public interface UserMapper {
				public User queryUserByNameAndPassword(@Param("uname")String name,@Param("upassword")String password);
			}

	     3).将参数封装到pojo或HashMap中传入Mapper的方法
			<mapper namespace="cn.itcast.dao.UserMapper" >
			    <select id="queryUserByUserName" resultType="cn.itcast.domain.User">
				SELECT * FROM user WHERE name = #{uname} and password= #{upassword}
			</mapper>

			public interface UserMapper {
				public User queryUserByNameAndPassword(PojoUser puser); //pojo的属性(getUname方法)和#占位符的名称一致
				public User queryUserByNameAndPassword(HashMap<String,Object> map); //HashMap的key和#占位符的名称一致
			}

			User user=sqlSession.selectOne("cn.itcast.dao.UserMapper.queryUserByNameAndPassword", pojo);
			或 User user=sqlSession.selectOne("cn.itcast.dao.UserMapper.queryUserByNameAndPassword", map);

			UserMapper userMapper = sqlSession.getMapper(UserMapper.class);
			userMapper.queryUserByNameAndPassword(pojo);
			或 userMapper.queryUserByNameAndPassword(map);

---------------------------------------------------------------------------------------------------------------------------------------		
	     
$ -- 用于SQL拼接,自己做测试测得也不需要配置parameterType
     单参数: 基本类型不会自动匹配,通过参数上加注解的方式指定${}的名字,或不加注解,直接用${value}取值
	     pojo以get方式,HashMap根据其key的值来取.
     多参数: 基本参数通过占位符${1}不行,要用${param1},或者用注解的方式
	     或者将基本类型封装到pojo和HashMap中.